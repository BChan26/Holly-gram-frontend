[{"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/index.js":"1","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/App.js":"2","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Nav.jsx":"3","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Feed.jsx":"4","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Register.jsx":"5","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/SignIn.jsx":"6","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Home.jsx":"7"},{"size":320,"mtime":1669825361169,"results":"8","hashOfConfig":"9"},{"size":3825,"mtime":1669993789976,"results":"10","hashOfConfig":"9"},{"size":765,"mtime":1669905818517,"results":"11","hashOfConfig":"9"},{"size":3043,"mtime":1669993928158,"results":"12","hashOfConfig":"9"},{"size":4497,"mtime":1670009217330,"results":"13","hashOfConfig":"9"},{"size":3656,"mtime":1670009217334,"results":"14","hashOfConfig":"9"},{"size":1294,"mtime":1669993898475,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"aml4kb",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/index.js",[],[],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/App.js",["41"],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Nav.jsx",["42","43"],[],"import Hollygram from '../assets/Hollygram.png'\nimport NavBarIcons from '../assets/NavBarIcons.png'\n\nexport default function Nav () {\n    return (\n    <div id='NavBarContent'>\n\n        <div id=\"NavBarLogo\">\n        <img id =\"HollyGramLogo\" src={Hollygram}/>\n        </div>\n\n        <div id=\"NavBarSearchBar\">\n                <form id=\"SearchBar\">\n                                        \n                    <label>\n                    Search\n                    <input type=\"text\" name=\"Search\" />\n                    </label>\n                                        \n                    <input type=\"submit\" value=\"Go\" />\n                </form>\n            </div>\n\n        <div id=\"NavBarIcons\">\n        <img src={NavBarIcons}/>\n        </div>\n\n    </div>\n    )}","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Feed.jsx",["44","45"],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Register.jsx",["46"],[],"//imports for Authentication\n// import { useState } from 'react'\n// import { RegisterUser } from '../services/Auth'\n// import {useNavigate} from 'react-router-dom'\n\nimport RegisterPageIcon from '../assets/RegisterPageIcon.gif'\nimport {Link} from 'react-router-dom'\n\nexport default function Register () {\n\n    // //logic for authentication, confirm variable names align\n    // let navigate = useNavigate()\n\n    // const [formValues, setFormValues] = useState({\n    //     fullName: '',\n    //     userName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: ''\n    // })\n\n    // const handleChange = (e) => {\n    // setFormValues({ ...formValues, [e.target.name]: e.target.value })\n    // }\n\n    // const handleSubmit = async (e) => {\n    //     e.preventDefault()\n    //     alert (\"Working\")\n\n    //     await RegisterUser({\n    //     fullName: formValues.fullName,\n    //     userName: formValues.userName,\n    //     email: formValues.email,\n    //     password: formValues.password\n    //     })\n\n    //     setFormValues({\n    //     fullName: '',\n    //     userName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: ''\n    //     })\n    // navigate('/SignIn')\n    // }\n\n    //return or display with the form\n    return (\n    <div id='RegisterContent'>\n\n        <div id=\"RegisterPreview\">\n        <img  id=\"RegisterPageIcon\" src={RegisterPageIcon}/>\n        </div>\n\n        <div id=\"RegisterInfo\">\n\n            <div id=\"RegisterInfoLogo\">\n            <h1>üéÅ HollyGram üéÅ</h1>\n            </div>\n\n            <div id=\"RegisterInfoInput\">\n                <form   id=\"RegisterInfoForm\" \n                        // onSubmit={handleSubmit}\n                        >\n\n\n                    <label>\n                    Full Name\n                    <input  \n                            // onchange={handleChange}\n                            name=\"fullName\" \n                            type=\"text\" \n                            placeholder=\"Tierra\"\n                            // value={formValues.fullName}\n                            required\n                            />\n                    </label>\n\n                    <label>\n                    Username\n                    <input \n                            // onchange={handleChange}\n                            name=\"userName\" \n                            type=\"text\" \n                            placeholder=\"IsAmazing\"\n                            // value={formValues.userName}\n                            required\n                            />\n                    </label>\n\n                    <label>\n                    Email\n                    <input  \n                            // onChange={handleChange}\n                            name=\"Email\" \n                            type=\"email\" \n                            placeholder=\"Lindsey@rocks.org\"\n                            // value={formValues.email}\n                            required\n                            />\n                    </label>\n\n                    <label>\n                    Password\n                    <input\n                            // onChange={handleChange}\n                            type=\"password\"\n                            name=\"password\"\n                            // value={formValues.password}\n                            required\n                            />\n                    </label>\n\n                    <label>\n                    Confirm Password\n                    <input\n                            // onChange={handleChange}\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            // value={formValues.confirmPassword}\n                            required\n                            />\n                    </label>\n\n                    <button className=\"RegisterButtons\"\n                    // disabled={\n                    // !formValues.email ||\n                    // (!formValues.password &&\n                    //     formValues.confirmPassword === formValues.password)\n                    // }\n                    >\n                    Register\n                    </button>\n                </form>\n            </div>\n \n            <br/>\n            <div id=\"RouteToGoToSignIn\">\n            <Link to= \"/SignIn\">\n                <button className=\"RegisterButtons\">Sign In Instead</button>\n            </Link>\n            \n\n            </div>\n\n\n        </div>\n\n\n    </div>\n    )}","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/SignIn.jsx",["47"],[],"import RegisterPageIcon from '../assets/RegisterPageIcon.gif'\nimport {Link} from 'react-router-dom'\n// import { useState } from 'react'\n\n// //SignInUser accepts one argument of data. Similar to Register, data is an object containing the following information:\n// //email\n// //password\n// import { SignInUser } from '../services/Auth'\n\n// // Finally, we'll redirect the user to a protected page with a URL of /feed. We'll need to import useNavigate again as well:\n// import { useNavigate } from 'react-router-dom'\n\n// export default function SignIn (props) {\nexport default function SignIn () {\n    \n            // let navigate = useNavigate()\n        \n            // const [formValues, setFormValues] = useState({ email: '', password: '' })\n        \n            // const handleChange = (e) => {\n            // setFormValues({ ...formValues, [e.target.name]: e.target.value })\n            // }\n        \n            // const handleSubmit = async (e) => {\n            // e.preventDefault()\n        \n            // //In the handleSubmit, we'll invoke the SignInUser function, provide the formValues state as an argument, and capture the return value with a variable called payload:\n            // const payload = await SignInUser(formValues)\n            // //Next we'll reset the form once the request completes successfully:\n            // setFormValues({ email: '', password: '' })\n            // //We then take the payload and use it to update our user state in App.js with the setUser method we passed in as props:\n            // props.setUser(payload)\n            // //Once our user has been set, we'll toggle the authenticated state using toggleAuthenticated:\n            // props.toggleAuthenticated(true)\n            // navigate('/Feed')\n            // }\n        \n\n\n\n\n\n\n\n\n\n\n    return (\n        <div id='SignInContent'>\n\n<div id=\"SignInPreview\">\n        <img  id=\"RegisterPageIcon\" src={RegisterPageIcon}/>\n        </div>\n\n        <div id=\"SignInInfo\">\n\n            <div id=\"SignInInfoLogo\">\n            <h1>üéÅ HollyGram üéÅ</h1>\n            </div>\n\n            <div id=\"SignInInfoInput\">\n                <form id=\"SignInInfoForm\" \n                // onSubmit={handleSubmit}\n                >\n                    <div>\n                        <label>\n                            Email\n                        </label>\n\n                        <input\n                            // onChange={handleChange}\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"email@email.com\"\n                            // value={formValues.email}\n                            required\n                            />\n                    </div>\n\n                    <div>\n                        <label>\n                            Password\n                        </label>\n\n                        <input\n                        // onChange={handleChange}\n                        type=\"password\"\n                        name=\"password\"\n                        // value={formValues.password}\n                        required\n                        />\n\n                    </div>\n\n                    <button className='RegisterButtons'\n                    // disabled={!formValues.email || !formValues.password}\n                    >\n                        Sign In\n                    </button>\n\n                </form>\n            </div>\n            <br/>\n            <div id=\"RouteToGoToRegister\">\n            <Link to= \"/Register\">\n                <button className=\"RegisterButtons\">Register Instead</button>\n            </Link>\n            \n\n            </div>\n        </div>\n\n\n    </div>\n)}","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Home.jsx",[],[],{"ruleId":"48","severity":1,"message":"49","line":6,"column":10,"nodeType":"50","messageId":"51","endLine":6,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":9,"column":9,"nodeType":"54","endLine":9,"endColumn":51},{"ruleId":"52","severity":1,"message":"53","line":25,"column":9,"nodeType":"54","endLine":25,"endColumn":33},{"ruleId":"52","severity":1,"message":"53","line":67,"column":25,"nodeType":"54","endLine":67,"endColumn":47},{"ruleId":"52","severity":1,"message":"53","line":72,"column":25,"nodeType":"54","endLine":72,"endColumn":54},{"ruleId":"52","severity":1,"message":"53","line":52,"column":9,"nodeType":"54","endLine":52,"endColumn":61},{"ruleId":"52","severity":1,"message":"53","line":52,"column":9,"nodeType":"54","endLine":52,"endColumn":61},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]