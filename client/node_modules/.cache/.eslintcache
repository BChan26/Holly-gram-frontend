[{"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/index.js":"1","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/App.js":"2","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/SignIn.jsx":"3","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Register.jsx":"4","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Home.jsx":"5","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Feed.jsx":"6","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Nav.jsx":"7","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/services/Auth.js":"8","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/services/api.js":"9","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/services/PostServices.js":"10","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Comment.jsx":"11","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/EditComment.jsx":"12"},{"size":320,"mtime":1670017455113,"results":"13","hashOfConfig":"14"},{"size":3109,"mtime":1670598149459,"results":"15","hashOfConfig":"14"},{"size":2656,"mtime":1670507074883,"results":"16","hashOfConfig":"14"},{"size":4317,"mtime":1670514584691,"results":"17","hashOfConfig":"14"},{"size":464,"mtime":1670510598176,"results":"18","hashOfConfig":"14"},{"size":5027,"mtime":1671666795411,"results":"19","hashOfConfig":"14"},{"size":692,"mtime":1670507800361,"results":"20","hashOfConfig":"14"},{"size":1373,"mtime":1670515307125,"results":"21","hashOfConfig":"14"},{"size":1167,"mtime":1671666721308,"results":"22","hashOfConfig":"14"},{"size":178,"mtime":1670359113698,"results":"23","hashOfConfig":"14"},{"size":4255,"mtime":1671666747953,"results":"24","hashOfConfig":"14"},{"size":1852,"mtime":1671666762047,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aml4kb",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/index.js",[],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/App.js",[],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/SignIn.jsx",["65"],[],"import RegisterPageIcon from '../assets/RegisterPageIcon.gif'\nimport {Link} from 'react-router-dom'\n\nimport { useState } from 'react'\nimport { SignInUser } from '../services/Auth'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function SignIn (props) {\n    \n    let navigate = useNavigate()\n    \n    const [formValues, setFormValues] = useState({ email: '', password: '' })\n    \n    const handleChange = (e) => {\n    setFormValues({ ...formValues, [e.target.name]: e.target.value })\n    }\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        \n        const payload = await SignInUser(formValues)\n        setFormValues({ email: '', password: '' })\n        props.setUser(payload)\n        props.toggleAuthenticated(true)\n        navigate('/Feed')\n    }\n\n\n\n    return (\n        <div id='SignInContent'>\n\n            <div id=\"SignInPreview\">\n            <img  id=\"RegisterPageIcon\" src={RegisterPageIcon}/>\n            </div>\n\n        <div id=\"SignInInfo\">\n            <div id=\"SignInInfoLogo\">\n            <h1>游꾸 HollyGram 游꾸</h1>\n            </div>\n\n            <div id=\"SignInInfoInput\">\n                <form id=\"SignInInfoForm\" \n                onSubmit={handleSubmit}\n                >\n                    <div>\n                        <label>\n                            Email\n                        </label>\n\n                        <input\n                            onChange={handleChange}\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"email@email.com\"\n                            value={formValues.email}\n                            required\n                            />\n                    </div>\n\n                    <div>\n                        <label>\n                            Password\n                        </label>\n\n                        <input\n                        onChange={handleChange}\n                        type=\"password\"\n                        name=\"password\"\n                        value={formValues.password}\n                        required\n                        />\n\n                    </div>\n\n                    <button className='RegisterButtons'\n                    disabled={!formValues.email || !formValues.password}\n                    >\n                        Sign In\n                    </button>\n\n                </form>\n            </div>\n            <br/>\n            <div id=\"RouteToGoToRegister\">\n            <Link to= \"/Register\">\n                <button className=\"RegisterButtons\">Register Instead</button>\n            </Link>\n        </div>\n        </div>\n\n    </div>\n)}","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Register.jsx",["66"],[],"// imports for Authentication\nimport { useState } from 'react'\nimport { RegisterUser } from '../services/Auth'\nimport {useNavigate} from 'react-router-dom'\n\nimport RegisterPageIcon from '../assets/RegisterPageIcon.gif'\nimport {Link} from 'react-router-dom'\n\nexport default function Register () {\n\n//logic for authentication\n    let navigate = useNavigate()\n\n    const [formValues, setFormValues] = useState({\n        fullName: '',\n        userName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const handleChange = (e) => {\n    setFormValues({ ...formValues, [e.target.name]: e.target.value })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n\n        await RegisterUser({\n        fullName: formValues.fullName,\n        userName: formValues.userName,\n        email: formValues.email,\n        password: formValues.password\n        })\n        alert (\"Account Created! Please Sign In.\")\n\n        setFormValues({\n        fullName: '',\n        userName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n        })\n\n\n    navigate('/SignIn')\n    }\n\n//return or display with the form\n    return (\n    <div id='RegisterContent'>\n\n        <div id=\"RegisterPreview\">\n        <img src={RegisterPageIcon}/>\n        </div>\n\n        <div id=\"RegisterInfo\">\n\n            <div id=\"RegisterInfoLogo\">\n            <h1>游꾸 HollyGram 游꾸</h1>\n            </div>\n\n            <div id=\"RegisterInfoInput\">\n                <form   id=\"RegisterInfoForm\" \n                        onSubmit={handleSubmit}\n                        >\n\n\n                    <label>\n                    Full Name\n                    <input  \n                            onChange={handleChange}\n                            name=\"fullName\" \n                            type=\"text\" \n                            placeholder=\"John Doe\"\n                            value={formValues.fullName}\n                            required\n                            />\n                    </label>\n\n                    <label>\n                    Username\n                    <input \n                            onChange={handleChange}\n                            name=\"userName\" \n                            type=\"text\" \n                            placeholder=\"JohnDoe123\"\n                            value={formValues.userName}\n                            required\n                            />\n                    </label>\n\n                    <label>\n                    Email\n                    <input  \n                            onChange={handleChange}\n                            name=\"email\" \n                            type=\"email\" \n                            placeholder=\"email@email.com\"\n                            value={formValues.email}\n                            required\n                            />\n                    </label>\n\n                    <label>\n                    Password\n                    <input\n                            onChange={handleChange}\n                            type=\"password\"\n                            name=\"password\"\n                            value={formValues.password}\n                            required\n                            />\n                    </label>\n\n                    <label>\n                    Confirm Password\n                    <input\n                            onChange={handleChange}\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            value={formValues.confirmPassword}\n                            required\n                            />\n                    </label>\n\n                    <button className=\"RegisterButtons\"\n                    disabled={\n                    !formValues.email ||\n                    (!formValues.password &&\n                        formValues.confirmPassword === formValues.password)\n                    }\n                    >\n                    Register\n                    </button>\n                </form>\n            </div>\n            <br/>\n            <div id=\"RouteToGoToSignIn\">\n            <Link to= \"/SignIn\">\n                <button className=\"RegisterButtons\">Sign In Instead</button>\n            </Link>\n            \n\n            </div>\n\n\n        </div>\n\n\n    </div>\n    )}","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Home.jsx",[],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Feed.jsx",[],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Nav.jsx",["67"],[],"import Hollygram from '../assets/Hollygram.png'\n\nimport {Link} from 'react-router-dom'\n\nexport default function Nav ({authenticated, user, handleLogOut}) {\n\n    return (\n    <div id='NavBarContent' style={{ \n        backgroundImage: `url(\"https://i.postimg.cc/SQZChxPc/image-1.png\")`,\n        backgroundPosition: 'right top',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'auto'\n    }}>\n\n        <div id=\"NavBarLogo\">\n        <img id =\"HollyGramLogo\" src={Hollygram}/>\n        </div>\n\n        <div id=\"LogOut\">\n        <button id=\"LogOutButton\">\n        <Link onClick={handleLogOut} to=\"/\">\n        Sign Out\n        </Link>\n        </button>\n        </div>\n\n    </div>\n    )}","/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/services/Auth.js",[],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/services/api.js",[],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/services/PostServices.js",[],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/Comment.jsx",["68","69"],[],"/Users/mac/Desktop/GA/unit3/Holly-gram-frontend/client/src/components/EditComment.jsx",["70","71"],[],{"ruleId":"72","severity":1,"message":"73","line":34,"column":13,"nodeType":"74","endLine":34,"endColumn":65},{"ruleId":"72","severity":1,"message":"73","line":55,"column":9,"nodeType":"74","endLine":55,"endColumn":38},{"ruleId":"72","severity":1,"message":"73","line":16,"column":9,"nodeType":"74","endLine":16,"endColumn":51},{"ruleId":"75","severity":1,"message":"76","line":35,"column":29,"nodeType":"77","messageId":"78","endLine":35,"endColumn":64,"fix":"79"},{"ruleId":"80","severity":1,"message":"81","line":73,"column":8,"nodeType":"82","endLine":73,"endColumn":10,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":18,"column":41,"nodeType":"77","messageId":"78","endLine":18,"endColumn":76,"fix":"88"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-computed-key","Unnecessarily computed property ['commentText'] found.","Property","unnecessarilyComputedProperty",{"range":"89","text":"90"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showComments'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",{"range":"92","text":"90"},[1083,1098],"'commentText'",{"desc":"93","fix":"94"},[588,603],"Update the dependencies array to be: [showComments]",{"range":"95","text":"96"},[2590,2592],"[showComments]"]